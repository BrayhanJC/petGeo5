{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/account/ChangeEmailForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input, Button, Card } from 'react-native-elements';\nimport { styles } from \"../../src/css/ModalProfile\";\nimport { validateEmail } from \"../../utils/validations\";\nimport * as firebase from 'firebase';\nimport { reauthenticate } from \"../../utils/Api\";\n\nfunction defaultFormValue() {\n  return {\n    email: '',\n    password: ''\n  };\n}\n\nfunction ChangeEmailForm(props) {\n  var email = props.email,\n      setShowModal = props.setShowModal,\n      toastRef = props.toastRef,\n      setReloadUserInfo = props.setReloadUserInfo;\n\n  var _useState = useState(defaultFormValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      formData = _useState2[0],\n      setFormData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showPassword = _useState4[0],\n      setShowPassword = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showError = _useState6[0],\n      setShowError = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoadig = _useState8[0],\n      setIsLoadig = _useState8[1];\n\n  var _onChange = function onChange(even, type) {\n    setFormData(_objectSpread({}, formData, _defineProperty({}, type, even.nativeEvent.text)));\n  };\n\n  var onSubmit = function onSubmit() {\n    setShowError({});\n    console.log(formData);\n\n    if (!formData.email) {\n      setShowError({\n        email: 'El campo email debe estar diligenciado',\n        password: ''\n      });\n    } else if (!validateEmail(formData.email)) {\n      setShowError({\n        email: 'No es un correo valido',\n        password: ''\n      });\n    } else if (!formData.password) {\n      setShowError({\n        email: '',\n        password: 'El campo contraseña debe estar diligenciado'\n      });\n    } else if (email === formData.email) {\n      setShowError({\n        email: 'El email es igual al actual',\n        password: ''\n      });\n    } else {\n      setShowError({});\n      console.log('ok');\n      setIsLoadig(true);\n      reauthenticate(formData.password).then(function () {\n        firebase.auth().currentUser.updateEmail(formData.email).then(function () {\n          setIsLoadig(false);\n          setReloadUserInfo(true);\n          toastRef.current.show('Email Actualizado con Exito');\n          setShowModal(false);\n        }).catch(function () {\n          toastRef.current.show('Error al actualizar el email');\n          setShowError({\n            email: 'Error al actualizar el email.'\n          });\n          setIsLoadig(false);\n        });\n      }).catch(function () {\n        setShowError({\n          password: 'La contraseña no es correcta.'\n        });\n        setIsLoadig(false);\n      });\n    }\n  };\n\n  return React.createElement(Card, {\n    title: \"Correo Electr\\xF3nico\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.view,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Correo Electr\\xF3nico\",\n    containerStyle: styles.input,\n    rightIcon: {\n      type: 'material-community',\n      name: 'email',\n      color: '#C2C2C2'\n    },\n    defaultValue: email,\n    onChange: function onChange(even) {\n      return _onChange(even, 'email');\n    },\n    errorMessage: showError.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Contrase\\xF1a\",\n    password: true,\n    secureTextEntry: showPassword ? false : true,\n    containerStyle: styles.input,\n    rightIcon: {\n      type: 'material-community',\n      name: showPassword ? 'eye-outline' : 'eye-off-outline',\n      color: '#C2C2C2',\n      onPress: function onPress() {\n        return setShowPassword(!showPassword);\n      }\n    },\n    onChange: function onChange(even) {\n      return _onChange(even, 'password');\n    },\n    errorMessage: showError.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    title: \"Cambiar Email\",\n    containerStyle: styles.btnContainer,\n    buttonStyle: styles.btnUpdate,\n    onPress: onSubmit,\n    loading: isLoadig,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  })));\n}\n\nexport default ChangeEmailForm;","map":{"version":3,"sources":["/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/account/ChangeEmailForm.js"],"names":["React","useState","Input","Button","Card","styles","validateEmail","firebase","reauthenticate","defaultFormValue","email","password","ChangeEmailForm","props","setShowModal","toastRef","setReloadUserInfo","formData","setFormData","showPassword","setShowPassword","showError","setShowError","isLoadig","setIsLoadig","onChange","even","type","nativeEvent","text","onSubmit","console","log","then","auth","currentUser","updateEmail","current","show","catch","view","input","name","color","onPress","btnContainer","btnUpdate"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Input, Button, Card } from 'react-native-elements';\nimport { styles } from '../../src/css/ModalProfile';\nimport { validateEmail } from '../../utils/validations';\nimport * as firebase from 'firebase';\n\nimport { reauthenticate } from '../../utils/Api';\n\n/***\n * Funcion que permite inicializar la variable formData\n */\nfunction defaultFormValue() {\n\treturn {\n\t\temail: '',\n\t\tpassword: ''\n\t};\n}\n\nfunction ChangeEmailForm(props) {\n\tconst { email, setShowModal, toastRef, setReloadUserInfo } = props;\n\n\t//variable donde se almacenaran los datos de email y contraseña\n\tconst [ formData, setFormData ] = useState(defaultFormValue);\n\n\t//variable para ocultar o mostrar la contraseña, como tambien el icono\n\tconst [ showPassword, setShowPassword ] = useState(false);\n\n\t//variable que permite mostrar una informacion de error al usuario\n\tconst [ showError, setShowError ] = useState({});\n\n\t//variable que permite verificar al usuario que se esta enviando una peticion, se mostrara en el boton\n\tconst [ isLoadig, setIsLoadig ] = useState(false);\n\t//funcion que nos permite actualizar el formData cada vez que el usuario ingrese algo en el email o password\n\tconst onChange = (even, type) => {\n\t\tsetFormData({\n\t\t\t...formData,\n\t\t\t[type]: even.nativeEvent.text\n\t\t});\n\t};\n\n\t//funcion que nos permite actualizar el displayName del usuario\n\tconst onSubmit = () => {\n\t\tsetShowError({});\n\t\tconsole.log(formData);\n\n\t\tif (!formData.email) {\n\t\t\tsetShowError({\n\t\t\t\temail: 'El campo email debe estar diligenciado',\n\t\t\t\tpassword: ''\n\t\t\t});\n\t\t} else if (!validateEmail(formData.email)) {\n\t\t\tsetShowError({\n\t\t\t\temail: 'No es un correo valido',\n\t\t\t\tpassword: ''\n\t\t\t});\n\t\t} else if (!formData.password) {\n\t\t\tsetShowError({\n\t\t\t\temail: '',\n\t\t\t\tpassword: 'El campo contraseña debe estar diligenciado'\n\t\t\t});\n\t\t} else if (email === formData.email) {\n\t\t\tsetShowError({\n\t\t\t\temail: 'El email es igual al actual',\n\t\t\t\tpassword: ''\n\t\t\t});\n\t\t} else {\n\t\t\tsetShowError({});\n\t\t\tconsole.log('ok');\n\t\t\tsetIsLoadig(true);\n\t\t\treauthenticate(formData.password)\n\t\t\t\t.then(() => {\n\t\t\t\t\tfirebase\n\t\t\t\t\t\t.auth()\n\t\t\t\t\t\t.currentUser.updateEmail(formData.email)\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tsetIsLoadig(false);\n\t\t\t\t\t\t\tsetReloadUserInfo(true)\n\t\t\t\t\t\t\ttoastRef.current.show('Email Actualizado con Exito')\n\t\t\t\t\t\t\tsetShowModal(false)\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch( () => {\n\t\t\t\t\t\t\ttoastRef.current.show('Error al actualizar el email')\n\t\t\t\t\t\t\tsetShowError({\n\t\t\t\t\t\t\t\temail: 'Error al actualizar el email.'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tsetIsLoadig(false);\n\t\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tsetShowError({\n\t\t\t\t\t\tpassword: 'La contraseña no es correcta.'\n\t\t\t\t\t});\n\t\t\t\t\tsetIsLoadig(false);\n\t\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<Card title=\"Correo Electrónico\">\n\t\t\t<View style={styles.view}>\n\t\t\t\t<Input\n\t\t\t\t\tplaceholder=\"Correo Electrónico\"\n\t\t\t\t\tcontainerStyle={styles.input}\n\t\t\t\t\trightIcon={{\n\t\t\t\t\t\ttype: 'material-community',\n\t\t\t\t\t\tname: 'email',\n\t\t\t\t\t\tcolor: '#C2C2C2'\n\t\t\t\t\t}}\n\t\t\t\t\tdefaultValue={email}\n\t\t\t\t\tonChange={(even) => onChange(even, 'email')}\n\t\t\t\t\terrorMessage={showError.email}\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\tplaceholder=\"Contraseña\"\n\t\t\t\t\tpassword={true}\n\t\t\t\t\tsecureTextEntry={showPassword ? false : true}\n\t\t\t\t\tcontainerStyle={styles.input}\n\t\t\t\t\trightIcon={{\n\t\t\t\t\t\ttype: 'material-community',\n\t\t\t\t\t\tname: showPassword ? 'eye-outline' : 'eye-off-outline',\n\t\t\t\t\t\tcolor: '#C2C2C2',\n\t\t\t\t\t\tonPress: () => setShowPassword(!showPassword)\n\t\t\t\t\t}}\n\t\t\t\t\tonChange={(even) => onChange(even, 'password')}\n\t\t\t\t\terrorMessage={showError.password}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\ttitle=\"Cambiar Email\"\n\t\t\t\t\tcontainerStyle={styles.btnContainer}\n\t\t\t\t\tbuttonStyle={styles.btnUpdate}\n\t\t\t\t\tonPress={onSubmit}\n\t\t\t\t\tloading={isLoadig}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</Card>\n\t);\n}\n\nexport default ChangeEmailForm;"]},"metadata":{},"sourceType":"module"}