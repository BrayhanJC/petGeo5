{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/formMain/Map.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Icon, Avatar, Image, Input, Button } from \"react-native-elements\";\nimport * as Permissions from \"expo-permissions\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport Modal from \"../Modal\";\nimport { map, size, filter } from \"lodash\";\nimport * as Location from \"expo-location\";\nimport MapView from \"react-native-maps\";\nimport { styleMap } from \"../../src/css/MapView\";\n\nfunction Map(props) {\n  var isVisibleMap = props.isVisibleMap,\n      setIsVisibleMap = props.setIsVisibleMap,\n      toastRef = props.toastRef,\n      setLocationForms = props.setLocationForms;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  console.log(\"aca\");\n  useEffect(function () {\n    (function _callee() {\n      var resultPermissions, statusPermissions, loc;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.LOCATION));\n\n            case 2:\n              resultPermissions = _context.sent;\n              statusPermissions = resultPermissions.permissions.location.status;\n              console.log(statusPermissions);\n\n              if (!(statusPermissions !== \"granted\")) {\n                _context.next = 9;\n                break;\n              }\n\n              toastRef.current.show(\"Tienes que Aceptar los permisos de localización para crear un Comedog\", 3000);\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 11:\n              loc = _context.sent;\n              setLocation({\n                latitude: loc.coords.latitude,\n                longitude: loc.coords.longitude,\n                latitudeDelta: 0.001,\n                longitudeDelta: 0.001\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var confirmLocation = function confirmLocation() {\n    setLocationForms(location);\n    toastRef.current.show(\"Localizacion guardada correctamente\");\n    setIsVisibleMap(false);\n  };\n\n  return React.createElement(Modal, {\n    isVisible: isVisibleMap,\n    setIsVisible: setIsVisibleMap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, location && React.createElement(MapView, {\n    style: styleMap.mapStyle,\n    initialRegion: location,\n    showsUserLocation: true,\n    onRegionChange: function onRegionChange(region) {\n      return setLocation(region);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, React.createElement(MapView.Marker, {\n    coordinate: {\n      latitude: location.latitude,\n      longitude: location.longitude\n    },\n    draggable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styleMap.viewMapBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Guardar ubicaci\\xF3n\",\n    containerStyle: styleMap.viewMapBtnContainerSave,\n    buttonStyle: styleMap.viewMapBtnSave,\n    onPress: confirmLocation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"Cancelar ubicaci\\xF3n\",\n    containerStyle: styleMap.viewMapBtnContainerCancel,\n    buttonStyle: styleMap.viewMapBtnCancel,\n    onPress: function onPress() {\n      return setIsVisibleMap(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/formMain/Map.js"],"names":["React","useState","useEffect","Icon","Avatar","Image","Input","Button","Permissions","ImagePicker","Modal","map","size","filter","Location","MapView","styleMap","Map","props","isVisibleMap","setIsVisibleMap","toastRef","setLocationForms","location","setLocation","console","log","askAsync","LOCATION","resultPermissions","statusPermissions","permissions","status","current","show","getCurrentPositionAsync","loc","latitude","coords","longitude","latitudeDelta","longitudeDelta","confirmLocation","mapStyle","region","viewMapBtn","viewMapBtnContainerSave","viewMapBtnSave","viewMapBtnContainerCancel","viewMapBtnCancel"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text, ScrollView, Alert, TextInput } from \"react-native\";\nimport { Icon, Avatar, Image, Input, Button } from \"react-native-elements\";\nimport * as Permissions from \"expo-permissions\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport Modal from \"../Modal\";\nimport { map, size, filter } from \"lodash\";\nimport * as Location from \"expo-location\";\nimport MapView from \"react-native-maps\";\nimport { styleMap } from \"../../src/css/MapView\";\n\nfunction Map(props) {\n  const { isVisibleMap, setIsVisibleMap, toastRef, setLocationForms } = props;\n  const [location, setLocation] = useState(null);\n\n  console.log(\"aca\");\n\n  useEffect(() => {\n    (async () => {\n      const resultPermissions = await Permissions.askAsync(\n        Permissions.LOCATION\n      );\n      const statusPermissions = resultPermissions.permissions.location.status;\n      console.log(statusPermissions);\n      if (statusPermissions !== \"granted\") {\n        toastRef.current.show(\n          \"Tienes que Aceptar los permisos de localización para crear un Comedog\",\n          3000\n        );\n      } else {\n        const loc = await Location.getCurrentPositionAsync({});\n        setLocation({\n          latitude: loc.coords.latitude,\n          longitude: loc.coords.longitude,\n          latitudeDelta: 0.001,\n          longitudeDelta: 0.001,\n        });\n      }\n    })();\n  }, []);\n\n  const confirmLocation = () => {\n    setLocationForms(location);\n    toastRef.current.show(\"Localizacion guardada correctamente\");\n    setIsVisibleMap(false);\n  };\n\n  return (\n    <Modal isVisible={isVisibleMap} setIsVisible={setIsVisibleMap}>\n      <View>\n        {location && (\n          <MapView\n            style={styleMap.mapStyle}\n            initialRegion={location}\n            showsUserLocation={true}\n            onRegionChange={(region) => setLocation(region)}\n          >\n            <MapView.Marker\n              coordinate={{\n                latitude: location.latitude,\n                longitude: location.longitude,\n              }}\n              draggable\n            />\n          </MapView>\n        )}\n        <View style={styleMap.viewMapBtn}>\n          <Button\n            title=\"Guardar ubicación\"\n            containerStyle={styleMap.viewMapBtnContainerSave}\n            buttonStyle={styleMap.viewMapBtnSave}\n            onPress={confirmLocation}\n          />\n          <Button\n            title=\"Cancelar ubicación\"\n            containerStyle={styleMap.viewMapBtnContainerCancel}\n            buttonStyle={styleMap.viewMapBtnCancel}\n            onPress={() => setIsVisibleMap(false)}\n          />\n        </View>\n      </View>\n    </Modal>\n  );\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}