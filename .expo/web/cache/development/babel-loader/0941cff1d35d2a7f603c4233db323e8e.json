{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/petControl/CreatePetControlForm.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Icon, Avatar, Image, Input, Button } from 'react-native-elements';\nimport { styleUploadImage } from \"../../src/css/UploadImage\";\nimport { styleImageMain } from \"../../src/css/ImageMain\";\nimport AddForm from \"../formMain/AddForm\";\nimport UploadImage from \"../formMain/UploadImage\";\nimport ImageMain from \"../formMain/ImageMain\";\nimport AvatarMain from \"../AvatarMain\";\nimport { stylePetControlForm } from \"../../src/css/PetControlForm\";\nimport { isEmpty } from 'lodash';\nimport PetControlForm from \"../petControl/PetControlForm\";\nvar widhtScreen = Dimensions.get('window').width;\n\nfunction CreatePetControlForm(props) {\n  var toastRef = props.toastRef,\n      setIsLoading = props.setIsLoading,\n      navigation = props.navigation,\n      userInfo = props.userInfo;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setloading = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nameControl = _useState4[0],\n      setNameControl = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      description = _useState6[0],\n      setDescription = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pet = _useState8[0],\n      setPet = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      errorPet = _useState10[0],\n      setErrorPet = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      errorName = _useState12[0],\n      setErrorName = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      errorDescription = _useState14[0],\n      setErrorDescription = _useState14[1];\n\n  var addPetControl = function addPetControl() {\n    console.log('hoa');\n\n    if (pet === '') {\n      setErrorPet('Debe selecionar una mascota');\n    } else if (isEmpty(nameControl)) {\n      console.log('esta vacio');\n      setErrorName('Debe ingresar un nombre para el control');\n    } else if (isEmpty(description)) {\n      setErrorDescription('Debe ingresar la descripción');\n    } else {\n      var data = {\n        name: namePet,\n        type: valueTypePet,\n        sex: valueTypeSex,\n        raza: valueRaza,\n        date_record: new Date(),\n        uid: userInfo.uid\n      };\n      console.log(data);\n    }\n  };\n\n  return React.createElement(ScrollView, {\n    style: stylePetControlForm.scrollView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: stylePetControlForm.viewForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }, React.createElement(AvatarMain, {\n    imageDefault: require(\"../../../assets/img/controlPet.jpg\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }), React.createElement(PetControlForm, {\n    setPet: setPet,\n    setDescription: setDescription,\n    setNameControl: setNameControl,\n    errorPet: errorPet,\n    errorName: errorName,\n    errorDescription: errorDescription,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    buttonStyle: stylePetControlForm.btnCreate,\n    title: \"A\\xF1adir Control\",\n    onPress: addPetControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  })));\n}\n\nexport default CreatePetControlForm;","map":{"version":3,"sources":["/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/petControl/CreatePetControlForm.js"],"names":["React","useState","Icon","Avatar","Image","Input","Button","styleUploadImage","styleImageMain","AddForm","UploadImage","ImageMain","AvatarMain","stylePetControlForm","isEmpty","PetControlForm","widhtScreen","Dimensions","get","width","CreatePetControlForm","props","toastRef","setIsLoading","navigation","userInfo","loading","setloading","nameControl","setNameControl","description","setDescription","pet","setPet","errorPet","setErrorPet","errorName","setErrorName","errorDescription","setErrorDescription","addPetControl","console","log","data","name","namePet","type","valueTypePet","sex","valueTypeSex","raza","valueRaza","date_record","Date","uid","scrollView","viewForm","require","btnCreate"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, ScrollView, Alert, Dimensions } from 'react-native';\nimport { Icon, Avatar, Image, Input, Button } from 'react-native-elements';\n\nimport { styleUploadImage } from '../../src/css/UploadImage';\nimport { styleImageMain } from '../../src/css/ImageMain';\nimport AddForm from '../formMain/AddForm';\nimport UploadImage from '../formMain/UploadImage';\nimport ImageMain from '../formMain/ImageMain';\nimport AvatarMain from '../AvatarMain';\n\nimport { stylePetControlForm } from '../../src/css/PetControlForm';\nimport { isEmpty } from 'lodash';\nimport PetControlForm from '../petControl/PetControlForm';\n\n//devuelve el ancho de la screen\nconst widhtScreen = Dimensions.get('window').width;\n\nfunction CreatePetControlForm(props) {\n\tconst { toastRef, setIsLoading, navigation, userInfo } = props;\n\tconst [ loading, setloading ] = useState(false);\n\tconst [ nameControl, setNameControl ] = useState('');\n\tconst [ description, setDescription ] = useState('');\n\tconst [ pet, setPet ] = useState('');\n\tconst [ errorPet, setErrorPet ] = useState('');\n\tconst [ errorName, setErrorName ] = useState('');\n\tconst [ errorDescription, setErrorDescription ] = useState('');\n\n\tconst addPetControl = () => {\n        console.log('hoa')\n\t\tif (pet === '') {\n            setErrorPet('Debe selecionar una mascota')\n\t\t} else if (isEmpty(nameControl)) {\n            console.log('esta vacio')\n            setErrorName('Debe ingresar un nombre para el control')\n        }else if (isEmpty(description)){\n            setErrorDescription('Debe ingresar la descripción')\n        } \n        else {\n\n\t\t\tvar data = {\n\t\t\t\tname: namePet,\n\t\t\t\ttype: valueTypePet,\n\t\t\t\tsex: valueTypeSex,\n\t\t\t\traza: valueRaza,\n\t\t\t\tdate_record: new Date(),\n\t\t\t\tuid: userInfo.uid\n\t\t\t};\n\t\t\tconsole.log(data);\n\t\t}\n\t};\n\n\treturn (\n\t\t<ScrollView style={stylePetControlForm.scrollView}>\n\t\t\t<View style={stylePetControlForm.viewForm}>\n\t\t\t\t<AvatarMain imageDefault={require('../../../assets/img/controlPet.jpg')} />\n\n\t\t\t\t<PetControlForm\n\t\t\t\t\tsetPet={setPet}\n\t\t\t\t\tsetDescription={setDescription}\n\t\t\t\t\tsetNameControl={setNameControl}\n\t\t\t\t\terrorPet={errorPet}\n\t\t\t\t\terrorName={errorName}\n\t\t\t\t\terrorDescription={errorDescription}\n\t\t\t\t/>\n\n\t\t\t\t<Button buttonStyle={stylePetControlForm.btnCreate} title=\"Añadir Control\" onPress={addPetControl} />\n\t\t\t</View>\n\t\t</ScrollView>\n\t);\n}\n\nexport default CreatePetControlForm;\n"]},"metadata":{},"sourceType":"module"}