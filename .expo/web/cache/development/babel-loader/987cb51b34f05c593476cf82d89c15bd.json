{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _jsxFileName = \"/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/formMain/UploadImage.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Icon, Avatar, Image, Input, Button } from \"react-native-elements\";\nimport * as Permissions from \"expo-permissions\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { map, size, filter } from \"lodash\";\n\nfunction UploadImage(props) {\n  var styleUploadImage = props.styleUploadImage,\n      toastRef = props.toastRef,\n      imageSelected = props.imageSelected,\n      setImageSelected = props.setImageSelected;\n\n  var removeImage = function removeImage(image) {\n    console.log(\"removiendo\");\n    Alert.alert(\"Eliminar Imagen\", \"¿Estas seguro de que quieres eliminar la imagen?\", [{\n      text: \"Cancel\",\n      style: \"cancel\"\n    }, {\n      text: \"Eliminar\",\n      onPress: function onPress() {\n        console.log(\"eliminada\");\n        setImageSelected(filter(imageSelected, function (imageUri) {\n          return imageUri !== image;\n        }));\n      }\n    }], {\n      cancelable: false\n    });\n  };\n\n  var imageSelect = function imageSelect() {\n    var resultPermissions, result;\n    return _regeneratorRuntime.async(function imageSelect$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n          case 2:\n            resultPermissions = _context.sent;\n\n            if (!(resultPermissions === \"denied\")) {\n              _context.next = 7;\n              break;\n            }\n\n            toastRef.current.show(\"Es necesario aceptar los permisos de la galeria, si lo haz rechazado tienes que ir a Configuración y activarlos manualmente\", 3000);\n            _context.next = 12;\n            break;\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              allowsEditing: true,\n              aspect: [4, 3]\n            }));\n\n          case 9:\n            result = _context.sent;\n            console.log(result);\n\n            if (result.cancelled) {\n              toastRef.current.show(\"Haz cerrado la galeria sin seleccionar ninguna imagen\", 2000);\n            } else {\n              setImageSelected([].concat(_toConsumableArray(imageSelected), [result.uri]));\n            }\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    style: styleUploadImage.viewImage,\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, size(imageSelected) < 4 && React.createElement(Icon, {\n    type: \"material-community\",\n    name: \"camera\",\n    color: \"#7A7A7A\",\n    containerStyle: styleUploadImage.containerIcon,\n    onPress: imageSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), map(imageSelected, function (imageComedog, index) {\n    return React.createElement(Avatar, {\n      key: index,\n      style: styleUploadImage.miniatureAvatar,\n      source: {\n        uri: imageComedog\n      },\n      rounded: true,\n      raised: true,\n      onPress: function onPress() {\n        return removeImage(imageComedog);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    });\n  }));\n}\n\nexport default UploadImage;","map":{"version":3,"sources":["/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/formMain/UploadImage.js"],"names":["React","useState","Icon","Avatar","Image","Input","Button","Permissions","ImagePicker","map","size","filter","UploadImage","props","styleUploadImage","toastRef","imageSelected","setImageSelected","removeImage","image","console","log","Alert","alert","text","style","onPress","imageUri","cancelable","imageSelect","askAsync","CAMERA_ROLL","resultPermissions","current","show","launchImageLibraryAsync","allowsEditing","aspect","result","cancelled","uri","viewImage","containerIcon","imageComedog","index","miniatureAvatar"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, ScrollView, Alert, TextInput } from \"react-native\";\nimport { Icon, Avatar, Image, Input, Button } from \"react-native-elements\";\nimport * as Permissions from \"expo-permissions\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nimport { map, size, filter } from \"lodash\";\n\nfunction UploadImage(props) {\n  const { styleUploadImage, toastRef, imageSelected, setImageSelected } = props;\n\n  const removeImage = (image) => {\n    console.log(\"removiendo\");\n\n    Alert.alert(\n      \"Eliminar Imagen\",\n      \"¿Estas seguro de que quieres eliminar la imagen?\",\n      [\n        {\n          text: \"Cancel\",\n          style: \"cancel\",\n        },\n        {\n          text: \"Eliminar\",\n\n          onPress: () => {\n            console.log(\"eliminada\");\n            setImageSelected(\n              filter(imageSelected, (imageUri) => imageUri !== image)\n            );\n          },\n        },\n      ],\n      {\n        cancelable: false,\n      }\n    );\n  };\n  const imageSelect = async () => {\n    const resultPermissions = await Permissions.askAsync(\n      Permissions.CAMERA_ROLL\n    );\n\n    if (resultPermissions === \"denied\") {\n      toastRef.current.show(\n        \"Es necesario aceptar los permisos de la galeria, si lo haz rechazado tienes que ir a Configuración y activarlos manualmente\",\n        3000\n      );\n    } else {\n      const result = await ImagePicker.launchImageLibraryAsync({\n        allowsEditing: true,\n        aspect: [4, 3],\n      });\n\n      console.log(result);\n\n      if (result.cancelled) {\n        toastRef.current.show(\n          \"Haz cerrado la galeria sin seleccionar ninguna imagen\",\n          2000\n        );\n      } else {\n        setImageSelected([...imageSelected, result.uri]);\n      }\n    }\n  };\n  return (\n    <ScrollView style={styleUploadImage.viewImage} horizontal={true}>\n      {size(imageSelected) < 4 && (\n        <Icon\n          type=\"material-community\"\n          name=\"camera\"\n          color=\"#7A7A7A\"\n          containerStyle={styleUploadImage.containerIcon}\n          onPress={imageSelect}\n        />\n      )}\n\n      {map(imageSelected, (imageComedog, index) => (\n        <Avatar\n          key={index}\n          style={styleUploadImage.miniatureAvatar}\n          source={{ uri: imageComedog }}\n          rounded\n          raised\n          onPress={() => removeImage(imageComedog)}\n        />\n      ))}\n    </ScrollView>\n  );\n}\n\nexport default UploadImage;\n"]},"metadata":{},"sourceType":"module"}