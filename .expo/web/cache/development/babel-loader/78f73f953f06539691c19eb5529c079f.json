{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/account/LoginFacebook.js\";\nimport React, { useState } from 'react';\nimport { SocialIcon } from 'react-native-elements';\nimport * as firebase from 'firebase';\nimport * as Facebook from 'expo-facebook';\nimport { useNavigation } from '@react-navigation/native';\nimport { FacebookApi } from \"../../utils/Social\";\nimport Loading from \"../Loading\";\n\nfunction LoginFacebook(props) {\n  var toastRef = props.toastRef;\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var login = function login() {\n    var _await$Facebook$logIn, type, token, credentials;\n\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('Login ...');\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Facebook.initializeAsync(FacebookApi.application_id));\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(Facebook.logInWithReadPermissionsAsync({\n              permissions: FacebookApi.permissions\n            }));\n\n          case 5:\n            _await$Facebook$logIn = _context.sent;\n            type = _await$Facebook$logIn.type;\n            token = _await$Facebook$logIn.token;\n\n            if (type === 'success') {\n              setLoading(true);\n              credentials = firebase.auth.FacebookAuthProvider.credential(token);\n              firebase.auth().signInWithCredential(credentials).then(function () {\n                console.log('ingreso con exito');\n                setLoading(false);\n                navigation.navigate('Profile');\n              }).catch(function (error) {\n                toastRef.current.show('Email o contraseña incorrectas');\n                console.log('algo salio mal');\n                setLoading(false);\n              });\n            } else if (type === 'cancel') {\n              toastRef.current.show('Haz cancelado el inicio de sesión');\n            } else {\n              toastRef.current.show('Error desconocido, intentelo nuevamente.');\n            }\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(SocialIcon, {\n    title: \"Iniciar sesi\\xF3n con Facebook\",\n    button: true,\n    type: \"facebook\",\n    onPress: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), React.createElement(Loading, {\n    isVisible: loading,\n    text: \"Iniciando Sesi\\xF3n\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default LoginFacebook;","map":{"version":3,"sources":["/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/account/LoginFacebook.js"],"names":["React","useState","SocialIcon","firebase","Facebook","useNavigation","FacebookApi","Loading","LoginFacebook","props","toastRef","navigation","loading","setLoading","login","console","log","initializeAsync","application_id","logInWithReadPermissionsAsync","permissions","type","token","credentials","auth","FacebookAuthProvider","credential","signInWithCredential","then","navigate","catch","error","current","show"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AACA,SAASC,aAAT,QAA6B,0BAA7B;AACA,SAASC,WAAT;AACA,OAAOC,OAAP;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAAA,MAEjBC,QAFiB,GAEJD,KAFI,CAEjBC,QAFiB;AAGzB,MAAMC,UAAU,GAAGN,aAAa,EAAhC;;AAHyB,kBAKKJ,QAAQ,CAAC,KAAD,CALb;AAAA;AAAA,MAKlBW,OALkB;AAAA,MAKTC,UALS;;AAOrB,MAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEVC,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAFU;AAAA,6CAIJZ,QAAQ,CAACa,eAAT,CAAyBX,WAAW,CAACY,cAArC,CAJI;;AAAA;AAAA;AAAA,6CAMoBd,QAAQ,CAACe,6BAAT,CAAuC;AACjEC,cAAAA,WAAW,EAAEd,WAAW,CAACc;AADwC,aAAvC,CANpB;;AAAA;AAAA;AAMFC,YAAAA,IANE,yBAMFA,IANE;AAMIC,YAAAA,KANJ,yBAMIA,KANJ;;AAUV,gBAAID,IAAI,KAAK,SAAb,EAAwB;AACpBR,cAAAA,UAAU,CAAC,IAAD,CAAV;AACMU,cAAAA,WAFc,GAEApB,QAAQ,CAACqB,IAAT,CAAcC,oBAAd,CAAmCC,UAAnC,CAA8CJ,KAA9C,CAFA;AAIpBnB,cAAAA,QAAQ,CACPqB,IADD,GAECG,oBAFD,CAEsBJ,WAFtB,EAGCK,IAHD,CAGO,YAAM;AACTb,gBAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAH,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,gBAAAA,UAAU,CAACkB,QAAX,CAAoB,SAApB;AACH,eAPD,EAQCC,KARD,CAQQ,UAACC,KAAD,EAAW;AAEfrB,gBAAAA,QAAQ,CAACsB,OAAT,CAAiBC,IAAjB,CAAsB,gCAAtB;AACAlB,gBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAH,gBAAAA,UAAU,CAAC,KAAD,CAAV;AAEH,eAdD;AAeH,aAnBD,MAmBO,IAAIQ,IAAI,KAAK,QAAb,EAAuB;AAC1BX,cAAAA,QAAQ,CAACsB,OAAT,CAAiBC,IAAjB,CAAsB,mCAAtB;AAEH,aAHM,MAGA;AAEHvB,cAAAA,QAAQ,CAACsB,OAAT,CAAiBC,IAAjB,CAAsB,0CAAtB;AAEH;;AApCS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAwCJ,SACI,0CACA,oBAAC,UAAD;AACI,IAAA,KAAK,EAAC,gCADV;AAEI,IAAA,MAAM,MAFV;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,OAAO,EAAEnB,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAOA,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEF,OAApB;AAA6B,IAAA,IAAI,EAAC,qBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,CADJ;AAWH;;AAED,eAAeJ,aAAf","sourcesContent":["import React, {useState} from 'react'\nimport {SocialIcon} from 'react-native-elements'\nimport * as firebase from 'firebase';\nimport * as Facebook from 'expo-facebook';\nimport { useNavigation} from '@react-navigation/native'\nimport { FacebookApi } from '../../utils/Social';\nimport Loading from '../Loading'\n\n\nfunction LoginFacebook(props){\n\n    const { toastRef } = props;\n    const navigation = useNavigation()\n\n    const [loading, setLoading] = useState(false)\n\n        const login = async () => {\n\n            console.log('Login ...');\n\n            await Facebook.initializeAsync(FacebookApi.application_id);\n\n            const { type, token } = await Facebook.logInWithReadPermissionsAsync({\n                permissions: FacebookApi.permissions\n            });\n\n            if (type === 'success') {\n                setLoading(true)\n                const credentials = firebase.auth.FacebookAuthProvider.credential(token);\n                //console.log(credentials)\n                firebase\n                .auth()\n                .signInWithCredential(credentials)\n                .then( () => {\n                    console.log('ingreso con exito')\n                    setLoading(false)\n                    navigation.navigate('Profile')\n                })\n                .catch( (error) => {\n                    //console.log(error)\n                    toastRef.current.show('Email o contraseña incorrectas')\n                    console.log('algo salio mal')\n                    setLoading(false)\n                  \n                })\n            } else if (type === 'cancel') {\n                toastRef.current.show('Haz cancelado el inicio de sesión');\n            \n            } else {\n\n                toastRef.current.show('Error desconocido, intentelo nuevamente.');\n                \n            }\n\n\n        }\n    return (\n        <>\n        <SocialIcon\n            title=\"Iniciar sesión con Facebook\"\n            button\n            type=\"facebook\"\n            onPress={login}\n        />\n        <Loading isVisible={loading} text=\"Iniciando Sesión\"/>\n        </>\n    )\n}\n\nexport default LoginFacebook"]},"metadata":{},"sourceType":"module"}