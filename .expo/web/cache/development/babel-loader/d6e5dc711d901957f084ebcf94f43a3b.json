{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/pet/CreatePetForm.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Icon, Avatar, Image, Input, Button } from 'react-native-elements';\nimport { styleUploadImage } from \"../../src/css/UploadImage\";\nimport { styleImageMain } from \"../../src/css/ImageMain\";\nimport AddForm from \"../formMain/AddForm\";\nimport UploadImage from \"../formMain/UploadImage\";\nimport ImageMain from \"../formMain/ImageMain\";\nimport AvatarMain from \"../AvatarMain\";\nimport { stylePetForm } from \"../../src/css/PetForm\";\nimport { isEmpty } from 'lodash';\nimport PetForm from \"../pet/PetForm\";\nvar widhtScreen = Dimensions.get('window').width;\n\nfunction CreatePetForm(props) {\n  var toastRef = props.toastRef,\n      setIsLoading = props.setIsLoading,\n      navigation = props.navigation,\n      userInfo = props.userInfo;\n\n  var addPet = function addPet() {\n    if (isEmpty(namePet)) {\n      toastRef.current.show('Debe diligenciar el campo Nombre Mascota', 2000);\n      setError('Este campo es requerido');\n    } else {\n      setError('');\n      var data = {\n        name: namePet,\n        type: valueTypePet,\n        sex: valueTypeSex,\n        raza: valueRaza,\n        date_birth: valueDate.date,\n        uid: userInfo.uid\n      };\n      console.log(data);\n    }\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setloading = _useState2[1];\n\n  var _useState3 = useState('Perro'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      valueTypePet = _useState4[0],\n      setValueTypePet = _useState4[1];\n\n  var _useState5 = useState('Macho'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      valueTypeSex = _useState6[0],\n      setValueTypeSex = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      namePet = _useState8[0],\n      setNamePet = _useState8[1];\n\n  var _useState9 = useState('Otro'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      valueRaza = _useState10[0],\n      setValueRaza = _useState10[1];\n\n  var _useState11 = useState({\n    date: new Date()\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      valueDate = _useState12[0],\n      setValueDate = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      error = _useState14[0],\n      setError = _useState14[1];\n\n  return React.createElement(ScrollView, {\n    style: stylePetForm.scrollView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: stylePetForm.viewForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }, React.createElement(AvatarMain, {\n    imageDefault: require(\"../../../assets/img/icon.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }), React.createElement(PetForm, {\n    valueTypePet: valueTypePet,\n    setValueTypePet: setValueTypePet,\n    valueTypeSex: valueTypeSex,\n    setValueTypeSex: setValueTypeSex,\n    namePet: namePet,\n    setNamePet: setNamePet,\n    valueRaza: valueRaza,\n    setValueRaza: setValueRaza,\n    valueDate: valueDate,\n    setValueDate: setValueDate,\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    buttonStyle: stylePetForm.btnCreate,\n    title: \"Crear Mascota\",\n    onPress: addPet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  })));\n}\n\nexport default CreatePetForm;","map":{"version":3,"sources":["/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/pet/CreatePetForm.js"],"names":["React","useState","Icon","Avatar","Image","Input","Button","styleUploadImage","styleImageMain","AddForm","UploadImage","ImageMain","AvatarMain","stylePetForm","isEmpty","PetForm","widhtScreen","Dimensions","get","width","CreatePetForm","props","toastRef","setIsLoading","navigation","userInfo","addPet","namePet","current","show","setError","data","name","type","valueTypePet","sex","valueTypeSex","raza","valueRaza","date_birth","valueDate","date","uid","console","log","loading","setloading","setValueTypePet","setValueTypeSex","setNamePet","setValueRaza","Date","setValueDate","error","scrollView","viewForm","require","btnCreate"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, ScrollView, Alert, Dimensions } from 'react-native';\nimport { Icon, Avatar, Image, Input, Button } from 'react-native-elements';\n\nimport { styleUploadImage } from '../../src/css/UploadImage';\nimport { styleImageMain } from '../../src/css/ImageMain';\nimport AddForm from '../formMain/AddForm';\nimport UploadImage from '../formMain/UploadImage';\nimport ImageMain from '../formMain/ImageMain';\nimport AvatarMain from '../AvatarMain';\n\nimport { stylePetForm } from '../../src/css/PetForm';\nimport { isEmpty } from 'lodash';\nimport PetForm from '../pet/PetForm';\n\n//devuelve el ancho de la screen\nconst widhtScreen = Dimensions.get('window').width;\nfunction CreatePetForm(props) {\n\tconst { toastRef, setIsLoading, navigation, userInfo } = props;\n\n\tconst addPet = () => {\n\t\tif (isEmpty(namePet)){\n\n\t\t\ttoastRef.current.show('Debe diligenciar el campo Nombre Mascota', 2000)\n\t\t\tsetError('Este campo es requerido')\n\n\t\t}else{\n\t\t\tsetError('')\n\t\t\tvar data = {\n\t\t\t\tname: namePet,\n\t\t\t\ttype: valueTypePet,\n\t\t\t\tsex: valueTypeSex,\n\t\t\t\traza: valueRaza,\n\t\t\t\tdate_birth: valueDate.date,\n\t\t\t\tuid: userInfo.uid\n\n\t\t\t}\n\t\t\tconsole.log(data)\n\t\t}\n\t};\n\n\tconst [ loading, setloading ] = useState(false);\n\tconst [ valueTypePet, setValueTypePet ] = useState('Perro');\n\tconst [ valueTypeSex, setValueTypeSex ] = useState('Macho');\n\tconst [ namePet, setNamePet ] = useState('');\n\tconst [ valueRaza, setValueRaza ] = useState('Otro');\n\tconst [ valueDate, setValueDate ] = useState({ date: new Date() });\n\tconst [error, setError] = useState('')\n\t//const {title, setTitle, address, setAddress, description, setDescription, btnName, addressVisible} = props\n\n\treturn (\n\t\t<ScrollView style={stylePetForm.scrollView}>\n\t\t\t<View style={stylePetForm.viewForm}>\n\t\t\t\t<AvatarMain imageDefault={require('../../../assets/img/icon.png')} />\n\n\t\t\t\t<PetForm\n\t\t\t\t\tvalueTypePet={valueTypePet}\n\t\t\t\t\tsetValueTypePet={setValueTypePet}\n\t\t\t\t\tvalueTypeSex={valueTypeSex}\n\t\t\t\t\tsetValueTypeSex={setValueTypeSex}\n\t\t\t\t\tnamePet={namePet}\n\t\t\t\t\tsetNamePet={setNamePet}\n\t\t\t\t\tvalueRaza={valueRaza}\n\t\t\t\t\tsetValueRaza={setValueRaza}\n\t\t\t\t\tvalueDate={valueDate}\n\t\t\t\t\tsetValueDate={setValueDate}\n\t\t\t\t\terror={error}\n\t\t\t\t/>\n\n\t\t\t\t<Button buttonStyle={stylePetForm.btnCreate} title=\"Crear Mascota\" onPress={addPet} />\n\t\t\t</View>\n\t\t</ScrollView>\n\t);\n}\n\nexport default CreatePetForm;\n"]},"metadata":{},"sourceType":"module"}