{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/account/InfoUser.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Avatar } from 'react-native-elements';\nimport * as firebase from 'firebase';\nimport * as Permissions from 'expo-permissions';\nimport * as ImagePicker from 'expo-image-picker';\n\nfunction InfoUser(props) {\n  var _props$userInfo = props.userInfo,\n      uid = _props$userInfo.uid,\n      photoURL = _props$userInfo.photoURL,\n      displayName = _props$userInfo.displayName,\n      email = _props$userInfo.email,\n      toastRef = props.toastRef,\n      setLoading = props.setLoading,\n      setLoadingText = props.setLoadingText;\n  console.log(props);\n\n  var changeAvatar = function changeAvatar() {\n    var resultPermission, resultPermissionCamera, result;\n    return _regeneratorRuntime.async(function changeAvatar$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('cambiando icono');\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n          case 3:\n            resultPermission = _context.sent;\n            resultPermissionCamera = resultPermission.permissions.cameraRoll.status;\n\n            if (!(resultPermissionCamera === 'denied')) {\n              _context.next = 9;\n              break;\n            }\n\n            toastRef.current.show('Es necesrio aceptar los permisos de la galeria');\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              allowsEditing: true,\n              aspect: [4, 3]\n            }));\n\n          case 11:\n            result = _context.sent;\n\n            if (result.cancelled) {\n              toastRef.current.show('Haz cerrado la seleccion de imagenes');\n            } else {\n              uploadImage(result.uri).then(function (response) {\n                console.log('imagen subida');\n                updatePhotoUrl();\n              }).catch(function (response) {\n                console.log('Error! No se ha podido subir la imagen');\n                toastRef.current.show('Error! No se ha podido subir la imagen');\n              });\n            }\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadImage = function uploadImage(uri) {\n    var response, blob, storage, storageRef, ref;\n    return _regeneratorRuntime.async(function uploadImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setLoadingText('Actualizando avatar');\n            setLoading(true);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 4:\n            response = _context2.sent;\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 7:\n            blob = _context2.sent;\n            storage = firebase.storage();\n            storageRef = storage.ref();\n            ref = storageRef.child(\"avatar/\" + uid);\n            return _context2.abrupt(\"return\", ref.put(blob));\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var updatePhotoUrl = function updatePhotoUrl() {\n    var storage = firebase.storage();\n    var storageRef = storage.ref(\"avatar/\" + uid);\n    storageRef.getDownloadURL().then(function _callee(response) {\n      var update;\n      return _regeneratorRuntime.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              update = {\n                photoURL: response\n              };\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(firebase.auth().currentUser.updateProfile(update));\n\n            case 3:\n              console.log('Imagen Actualizada');\n              setLoading(false);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }).catch(function (response) {\n      toastRef.current.show('Ha surgido un error, no se ha podido actualizar el perfil');\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.viewUserInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 3\n    }\n  }, React.createElement(Avatar, {\n    rounded: true,\n    size: \"large\",\n    showEditButton: true,\n    containerStyle: styles.userInfoAvatar,\n    source: photoURL ? {\n      url: photoURL\n    } : require(\"../../../assets/img/avatar_cat.png\"),\n    onEditPress: changeAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles.displayName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, displayName ? displayName : 'An√≥nimo'), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, email ? email : 'Social login')));\n}\n\nexport default InfoUser;\nvar styles = StyleSheet.create({\n  viewUserInfo: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    backgroundColor: '#F2F2F2',\n    paddingTop: 30,\n    paddingBottom: 30\n  },\n  userInfoAvatar: {\n    marginRight: 20\n  },\n  displayName: {\n    fontWeight: 'bold',\n    paddingBottom: 10,\n    fontSize: 18\n  }\n});","map":{"version":3,"sources":["/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/account/InfoUser.js"],"names":["React","Avatar","firebase","Permissions","ImagePicker","InfoUser","props","userInfo","uid","photoURL","displayName","email","toastRef","setLoading","setLoadingText","console","log","changeAvatar","askAsync","CAMERA_ROLL","resultPermission","resultPermissionCamera","permissions","cameraRoll","status","current","show","launchImageLibraryAsync","allowsEditing","aspect","result","cancelled","uploadImage","uri","then","response","updatePhotoUrl","catch","fetch","blob","storage","storageRef","ref","child","put","getDownloadURL","update","auth","currentUser","updateProfile","styles","viewUserInfo","userInfoAvatar","url","require","StyleSheet","create","alignItems","justifyContent","flexDirection","backgroundColor","paddingTop","paddingBottom","marginRight","fontWeight","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,MAAT,QAAuB,uBAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,wBAE0EA,KAF1E,CAEhBC,QAFgB;AAAA,MAEJC,GAFI,mBAEJA,GAFI;AAAA,MAECC,QAFD,mBAECA,QAFD;AAAA,MAEWC,WAFX,mBAEWA,WAFX;AAAA,MAEwBC,KAFxB,mBAEwBA,KAFxB;AAAA,MAEiCC,QAFjC,GAE0EN,KAF1E,CAEiCM,QAFjC;AAAA,MAE2CC,UAF3C,GAE0EP,KAF1E,CAE2CO,UAF3C;AAAA,MAEuDC,cAFvD,GAE0ER,KAF1E,CAEuDQ,cAFvD;AAIxBC,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;;AAEA,MAAMW,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBF,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AADoB;AAAA,6CAEWb,WAAW,CAACe,QAAZ,CAAqBf,WAAW,CAACgB,WAAjC,CAFX;;AAAA;AAEdC,YAAAA,gBAFc;AAGdC,YAAAA,sBAHc,GAGWD,gBAAgB,CAACE,WAAjB,CAA6BC,UAA7B,CAAwCC,MAHnD;;AAAA,kBAKhBH,sBAAsB,KAAK,QALX;AAAA;AAAA;AAAA;;AAMnBT,YAAAA,QAAQ,CAACa,OAAT,CAAiBC,IAAjB,CAAsB,gDAAtB;AANmB;AAAA;;AAAA;AAAA;AAAA,6CAQEtB,WAAW,CAACuB,uBAAZ,CAAoC;AACxDC,cAAAA,aAAa,EAAE,IADyC;AAExDC,cAAAA,MAAM,EAAE,CAAE,CAAF,EAAK,CAAL;AAFgD,aAApC,CARF;;AAAA;AAQbC,YAAAA,MARa;;AAenB,gBAAIA,MAAM,CAACC,SAAX,EAAsB;AACrBnB,cAAAA,QAAQ,CAACa,OAAT,CAAiBC,IAAjB,CAAsB,sCAAtB;AACA,aAFD,MAEO;AACNM,cAAAA,WAAW,CAACF,MAAM,CAACG,GAAR,CAAX,CACEC,IADF,CACO,UAACC,QAAD,EAAc;AACDpB,gBAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAoB,gBAAAA,cAAc;AAChC,eAJF,EAKEC,KALF,CAKQ,UAACF,QAAD,EAAc;AACpBpB,gBAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACAJ,gBAAAA,QAAQ,CAACa,OAAT,CAAiBC,IAAjB,CAAsB,wCAAtB;AACA,eARF;AASA;;AA3BkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAkCA,MAAMM,WAAW,GAAG,SAAdA,WAAc,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbnB,YAAAA,cAAc,CAAC,qBAAD,CAAd;AACAD,YAAAA,UAAU,CAAC,IAAD,CAAV;AAFa;AAAA,6CAGIyB,KAAK,CAACL,GAAD,CAHT;;AAAA;AAGbE,YAAAA,QAHa;AAAA;AAAA,6CAIAA,QAAQ,CAACI,IAAT,EAJA;;AAAA;AAIbA,YAAAA,IAJa;AAOfC,YAAAA,OAPe,GAOLtC,QAAQ,CAACsC,OAAT,EAPK;AAQfC,YAAAA,UARe,GAQFD,OAAO,CAACE,GAAR,EARE;AASbA,YAAAA,GATa,GASPD,UAAU,CAACE,KAAX,aAA2BnC,GAA3B,CATO;AAAA,8CAUZkC,GAAG,CAACE,GAAJ,CAAQL,IAAR,CAVY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAiBG,MAAMH,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,QAAII,OAAO,GAAGtC,QAAQ,CAACsC,OAAT,EAAd;AACA,QAAIC,UAAU,GAAGD,OAAO,CAACE,GAAR,aAAsBlC,GAAtB,CAAjB;AACAiC,IAAAA,UAAU,CAACI,cAAX,GACCX,IADD,CACO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACGW,cAAAA,MADH,GACY;AACXrC,gBAAAA,QAAQ,EAAE0B;AADC,eADZ;AAAA;AAAA,+CAIGjC,QAAQ,CAAC6C,IAAT,GAAgBC,WAAhB,CAA4BC,aAA5B,CAA0CH,MAA1C,CAJH;;AAAA;AAKH/B,cAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAH,cAAAA,UAAU,CAAC,KAAD,CAAV;;AANG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADP,EASCwB,KATD,CASQ,UAACF,QAAD,EAAc;AAClBvB,MAAAA,QAAQ,CAACa,OAAT,CAAiBC,IAAjB,CAAsB,2DAAtB;AACH,KAXD;AAaH,GAhBD;;AAkBH,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwB,MAAM,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD;AACC,IAAA,OAAO,MADR;AAEC,IAAA,IAAI,EAAC,OAFN;AAGC,IAAA,cAAc,MAHf;AAIC,IAAA,cAAc,EAAED,MAAM,CAACE,cAJxB;AAKC,IAAA,MAAM,EAAE3C,QAAQ,GAAG;AAAE4C,MAAAA,GAAG,EAAE5C;AAAP,KAAH,GAAuB6C,OAAO,sCAL/C;AAMC,IAAA,WAAW,EAAErC,YANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAUC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEiC,MAAM,CAACxC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCA,WAAW,GAAGA,WAAH,GAAiB,SAA9D,CADD,EAEC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,KAAK,GAAGA,KAAH,GAAW,cAAvB,CAFD,CAVD,CADD;AAiBA;;AAED,eAAeN,QAAf;AAEA,IAAM6C,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAChCL,EAAAA,YAAY,EAAE;AACbM,IAAAA,UAAU,EAAE,QADC;AAEbC,IAAAA,cAAc,EAAE,QAFH;AAGbC,IAAAA,aAAa,EAAE,KAHF;AAIbC,IAAAA,eAAe,EAAE,SAJJ;AAKbC,IAAAA,UAAU,EAAE,EALC;AAMbC,IAAAA,aAAa,EAAE;AANF,GADkB;AAShCV,EAAAA,cAAc,EAAE;AACfW,IAAAA,WAAW,EAAE;AADE,GATgB;AAahCrD,EAAAA,WAAW,EAAE;AACZsD,IAAAA,UAAU,EAAE,MADA;AAEZF,IAAAA,aAAa,EAAE,EAFH;AAGZG,IAAAA,QAAQ,EAAE;AAHE;AAbmB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Text } from 'react-native';\nimport { Avatar } from 'react-native-elements';\nimport * as firebase from 'firebase';\nimport * as Permissions from 'expo-permissions';\nimport * as ImagePicker from 'expo-image-picker';\n\nfunction InfoUser(props) {\n\t//capturando datos del usuario\n\tconst { userInfo: { uid, photoURL, displayName, email }, toastRef, setLoading, setLoadingText } = props;\n\n\tconsole.log(props);\n\n\tconst changeAvatar = async () => {\n\t\tconsole.log('cambiando icono');\n\t\tconst resultPermission = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\t\tconst resultPermissionCamera = resultPermission.permissions.cameraRoll.status;\n\n\t\tif (resultPermissionCamera === 'denied') {\n\t\t\ttoastRef.current.show('Es necesrio aceptar los permisos de la galeria');\n\t\t} else {\n\t\t\tconst result = await ImagePicker.launchImageLibraryAsync({\n\t\t\t\tallowsEditing: true,\n\t\t\t\taspect: [ 4, 3 ]\n\t\t\t});\n\n\t\t\t//console.log(result);\n\n\t\t\tif (result.cancelled) {\n\t\t\t\ttoastRef.current.show('Haz cerrado la seleccion de imagenes');\n\t\t\t} else {\n\t\t\t\tuploadImage(result.uri)\n\t\t\t\t\t.then((response) => {\n                        console.log('imagen subida');\n                        updatePhotoUrl()\n\t\t\t\t\t})\n\t\t\t\t\t.catch((response) => {\n\t\t\t\t\t\tconsole.log('Error! No se ha podido subir la imagen');\n\t\t\t\t\t\ttoastRef.current.show('Error! No se ha podido subir la imagen');\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\t/***\n     * Funcion que permite subir la imagen al firestore\n     */\n\tconst uploadImage = async (uri) => {\n        setLoadingText('Actualizando avatar')\n        setLoading(true)\n\t\tconst response = await fetch(uri);\n\t\tconst blob = await response.blob();\n\t\t//console.log(JSON.stringify(blob));\n\n\t\tvar storage = firebase.storage();\n\t\tvar storageRef = storage.ref();\n\t\tconst ref = storageRef.child(`avatar/${uid}`);\n\t\treturn ref.put(blob);\n    };\n    \n    /***\n     * Funcion que permite actualizar la url de la imagen que es un parametro\n     * que tiene la variable userInfo\n     */\n    const updatePhotoUrl = () => {\n        var storage = firebase.storage();\n        var storageRef = storage.ref(`avatar/${uid}`);\n        storageRef.getDownloadURL()\n        .then( async (response) => {\n            const update = {\n                photoURL: response\n            }\n            await firebase.auth().currentUser.updateProfile(update)\n            console.log('Imagen Actualizada')\n            setLoading(false)\n        })\n        .catch( (response) => {\n            toastRef.current.show('Ha surgido un error, no se ha podido actualizar el perfil')\n        })\n\n    }\n\n\treturn (\n\t\t<View style={styles.viewUserInfo}>\n\t\t\t<Avatar\n\t\t\t\trounded\n\t\t\t\tsize=\"large\"\n\t\t\t\tshowEditButton\n\t\t\t\tcontainerStyle={styles.userInfoAvatar}\n\t\t\t\tsource={photoURL ? { url: photoURL } : require('../../../assets/img/avatar_cat.png')}\n\t\t\t\tonEditPress={changeAvatar}\n\t\t\t/>\n\n\t\t\t<View>\n\t\t\t\t<Text style={styles.displayName}>{displayName ? displayName : 'An√≥nimo'}</Text>\n\t\t\t\t<Text>{email ? email : 'Social login'}</Text>\n\t\t\t</View>\n\t\t</View>\n\t);\n}\n\nexport default InfoUser;\n\nconst styles = StyleSheet.create({\n\tviewUserInfo: {\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tflexDirection: 'row',\n\t\tbackgroundColor: '#F2F2F2',\n\t\tpaddingTop: 30,\n\t\tpaddingBottom: 30\n\t},\n\tuserInfoAvatar: {\n\t\tmarginRight: 20\n\t},\n\n\tdisplayName: {\n\t\tfontWeight: 'bold',\n\t\tpaddingBottom: 10,\n\t\tfontSize: 18\n\t}\n});\n"]},"metadata":{},"sourceType":"module"}