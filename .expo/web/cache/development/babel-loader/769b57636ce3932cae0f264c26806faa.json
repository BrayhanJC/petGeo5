{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/missingPets/AddMissingPetForm.js\";\nimport React, { useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { styleForm } from \"../../src/css/AddForm\";\nimport { styleUploadImage } from \"../../src/css/UploadImage\";\nimport { styleImageMain } from \"../../src/css/ImageMain\";\nimport { Button } from \"react-native-elements\";\nimport { size } from \"lodash\";\nimport firebase from \"firebase/app\";\nimport AddForm from \"../formMain/AddForm\";\nimport UploadImage from \"../formMain/UploadImage\";\nimport ImageMain from \"../formMain/ImageMain\";\nimport { uploadImageStorage } from \"../../utils/UploadImageStorage\";\nimport { saveCollection } from \"../../utils/SaveRecord\";\nimport Map from \"../formMain/Map\";\nvar widhtScreen = Dimensions.get(\"window\").width;\n\nfunction AddMissinPetForm(props) {\n  var toastRef = props.toastRef,\n      setIsLoading = props.setIsLoading,\n      navigation = props.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      locationMissingPet = _useState2[0],\n      setLocationMissingPet = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setloading = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      address = _useState8[0],\n      setAddress = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      description = _useState10[0],\n      setDescription = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      imageSelected = _useState12[0],\n      setImageSelected = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isVisibleMap = _useState14[0],\n      setIsVisibleMap = _useState14[1];\n\n  var addMissingPets = function addMissingPets() {\n    setIsLoading(true);\n\n    if (!title || !address || !description) {\n      toastRef.current.show(\"Todos los campos del formulario son obligatorios\");\n    } else if (size(imageSelected) === 0) {\n      toastRef.current.show(\"El Reporte debe de tener por lo menos una foto\");\n    } else if (!locationMissingPet) {\n      toastRef.current.show(\"Debes localizar tu reporte en el mapa\");\n    } else {\n      uploadImageStorage(imageSelected, \"MissingPets\").then(function (response) {\n        saveCollection({\n          name: title,\n          address: address,\n          description: description,\n          location: locationMissingPet,\n          image: response,\n          createAt: new Date(),\n          createBy: firebase.auth().currentUser.uid\n        }, \"missingPets\", navigation, \"missing-pets\", toastRef, setloading, \"Error al subir el reporte\");\n      });\n    }\n  };\n\n  return React.createElement(ScrollView, {\n    style: styleForm.scrollView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageMain, {\n    styleImageMain: styleImageMain,\n    toastRef: toastRef,\n    widhtScreen: widhtScreen,\n    imageMain: imageSelected[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(AddForm, {\n    title: \"Titulo Reporte\",\n    address: \"Direcci\\xF3n\",\n    addressVisible: true,\n    description: \"Describa en breves palabras donde se encuentra la mascota\",\n    styleForm: styleForm,\n    setTitle: setTitle,\n    setAddress: setAddress,\n    setDescription: setDescription,\n    setIsVisibleMap: setIsVisibleMap,\n    locationForm: locationMissingPet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), React.createElement(UploadImage, {\n    styleUploadImage: styleUploadImage,\n    toastRef: toastRef,\n    imageSelected: imageSelected,\n    setImageSelected: setImageSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    buttonStyle: styleForm.btnCreate,\n    title: \"Crear Reporte\",\n    onPress: addMissingPets,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), React.createElement(Map, {\n    isVisibleMap: isVisibleMap,\n    setIsVisibleMap: setIsVisibleMap,\n    toastRef: toastRef,\n    setLocationForms: setLocationMissingPet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default AddMissinPetForm;","map":{"version":3,"sources":["/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/missingPets/AddMissingPetForm.js"],"names":["React","useState","styleForm","styleUploadImage","styleImageMain","Button","size","firebase","AddForm","UploadImage","ImageMain","uploadImageStorage","saveCollection","Map","widhtScreen","Dimensions","get","width","AddMissinPetForm","props","toastRef","setIsLoading","navigation","locationMissingPet","setLocationMissingPet","loading","setloading","title","setTitle","address","setAddress","description","setDescription","imageSelected","setImageSelected","isVisibleMap","setIsVisibleMap","addMissingPets","current","show","then","response","name","location","image","createAt","Date","createBy","auth","currentUser","uid","scrollView","btnCreate"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { ScrollView, Dimensions } from \"react-native\";\nimport { styleForm } from \"../../src/css/AddForm\";\nimport { styleUploadImage } from \"../../src/css/UploadImage\";\nimport { styleImageMain } from \"../../src/css/ImageMain\";\nimport { Button } from \"react-native-elements\";\nimport { size } from \"lodash\";\nimport firebase from \"firebase/app\";\nimport AddForm from \"../formMain/AddForm\";\nimport UploadImage from \"../formMain/UploadImage\";\nimport ImageMain from \"../formMain/ImageMain\";\nimport { uploadImageStorage } from \"../../utils/UploadImageStorage\";\nimport { saveCollection } from \"../../utils/SaveRecord\";\nimport Map from \"../formMain/Map\";\n\nconst widhtScreen = Dimensions.get(\"window\").width;\nfunction AddMissinPetForm(props) {\n  const { toastRef, setIsLoading, navigation } = props;\n  const [locationMissingPet, setLocationMissingPet] = useState(null);\n  const [loading, setloading] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [imageSelected, setImageSelected] = useState([]);\n  const [isVisibleMap, setIsVisibleMap] = useState(false);\n\n  const addMissingPets = () => {\n    setIsLoading(true);\n    if (!title || !address || !description) {\n      toastRef.current.show(\"Todos los campos del formulario son obligatorios\");\n    } else if (size(imageSelected) === 0) {\n      toastRef.current.show(\"El Reporte debe de tener por lo menos una foto\");\n    } else if (!locationMissingPet) {\n      toastRef.current.show(\"Debes localizar tu reporte en el mapa\");\n    } else {\n      uploadImageStorage(imageSelected, \"MissingPets\").then((response) => {\n        saveCollection(\n          {\n            name: title,\n            address: address,\n            description: description,\n            location: locationMissingPet,\n            image: response,\n            createAt: new Date(),\n            createBy: firebase.auth().currentUser.uid,\n          },\n          \"missingPets\",\n          navigation,\n          \"missing-pets\",\n          toastRef,\n          setloading,\n          \"Error al subir el reporte\"\n        );\n      });\n    }\n  };\n\n  return (\n    <ScrollView style={styleForm.scrollView}>\n      <ImageMain\n        styleImageMain={styleImageMain}\n        toastRef={toastRef}\n        widhtScreen={widhtScreen}\n        imageMain={imageSelected[0]}\n      />\n\n      <AddForm\n        title=\"Titulo Reporte\"\n        address=\"Dirección\"\n        addressVisible={true}\n        description=\"Describa en breves palabras donde se encuentra la mascota\"\n        styleForm={styleForm}\n        setTitle={setTitle}\n        setAddress={setAddress}\n        setDescription={setDescription}\n        setIsVisibleMap={setIsVisibleMap}\n        locationForm={locationMissingPet}\n      />\n      <UploadImage\n        styleUploadImage={styleUploadImage}\n        toastRef={toastRef}\n        imageSelected={imageSelected}\n        setImageSelected={setImageSelected}\n      />\n\n      <Button\n        buttonStyle={styleForm.btnCreate}\n        title=\"Crear Reporte\"\n        onPress={addMissingPets}\n      />\n\n      <Map\n        isVisibleMap={isVisibleMap}\n        setIsVisibleMap={setIsVisibleMap}\n        toastRef={toastRef}\n        setLocationForms={setLocationMissingPet}\n      />\n    </ScrollView>\n  );\n}\n\nexport default AddMissinPetForm;\n"]},"metadata":{},"sourceType":"module"}