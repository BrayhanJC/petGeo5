{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { firebaseApp } from \"../utils/FireBase\";\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport uuid from \"random-uuid-v4\";\nimport { map } from \"lodash\";\nexport var uploadImageStorage = function uploadImageStorage(imageSelected, refFolder) {\n  var imageBlob;\n  return _regeneratorRuntime.async(function uploadImageStorage$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          imageBlob = [];\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(Promise.all(map(imageSelected, function _callee2(image) {\n            var response, blob, ref;\n            return _regeneratorRuntime.async(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return _regeneratorRuntime.awrap(fetch(image));\n\n                  case 2:\n                    response = _context2.sent;\n                    _context2.next = 5;\n                    return _regeneratorRuntime.awrap(response.blob());\n\n                  case 5:\n                    blob = _context2.sent;\n                    ref = firebase.storage().ref(refFolder).child(uuid());\n                    _context2.next = 9;\n                    return _regeneratorRuntime.awrap(ref.put(blob).then(function _callee(result) {\n                      return _regeneratorRuntime.async(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              _context.next = 2;\n                              return _regeneratorRuntime.awrap(firebase.storage().ref(refFolder + \"/\" + result.metadata.name).getDownloadURL().then(function (photoUrl) {\n                                imageBlob.push(photoUrl);\n                              }));\n\n                            case 2:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, null, null, null, Promise);\n                    }));\n\n                  case 9:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          })));\n\n        case 3:\n          return _context3.abrupt(\"return\", imageBlob);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/utils/UploadImageStorage.js"],"names":["firebaseApp","firebase","uuid","map","uploadImageStorage","imageSelected","refFolder","imageBlob","Promise","all","image","fetch","response","blob","ref","storage","child","put","then","result","metadata","name","getDownloadURL","photoUrl","push"],"mappings":";AAAA,SAASA,WAAT;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,kBAAP;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,GAAT,QAAoB,QAApB;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAOC,aAAP,EAAsBC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BC,UAAAA,SAD0B,GACd,EADc;AAAA;AAAA,2CAG1BC,OAAO,CAACC,GAAR,CACJN,GAAG,CAACE,aAAD,EAAgB,kBAAOK,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDACMC,KAAK,CAACD,KAAD,CADX;;AAAA;AACXE,oBAAAA,QADW;AAAA;AAAA,qDAEEA,QAAQ,CAACC,IAAT,EAFF;;AAAA;AAEXA,oBAAAA,IAFW;AAGXC,oBAAAA,GAHW,GAGLb,QAAQ,CAACc,OAAT,GAAmBD,GAAnB,CAAuBR,SAAvB,EAAkCU,KAAlC,CAAwCd,IAAI,EAA5C,CAHK;AAAA;AAAA,qDAIXY,GAAG,CAACG,GAAJ,CAAQJ,IAAR,EAAcK,IAAd,CAAmB,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DACjBlB,QAAQ,CACXc,OADG,GAEHD,GAFG,CAEIR,SAFJ,SAEiBa,MAAM,CAACC,QAAP,CAAgBC,IAFjC,EAGHC,cAHG,GAIHJ,IAJG,CAIE,UAACK,QAAD,EAAc;AAClBhB,gCAAAA,SAAS,CAACiB,IAAV,CAAeD,QAAf;AACD,+BANG,CADiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAnB,CAJW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAhB,CADC,CAH0B;;AAAA;AAAA,4CAoBzBhB,SApByB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B","sourcesContent":["import { firebaseApp } from \"../utils/FireBase\";\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport uuid from \"random-uuid-v4\";\nimport { map } from \"lodash\";\n\nexport const uploadImageStorage = async (imageSelected, refFolder) => {\n  const imageBlob = [];\n\n  await Promise.all(\n    map(imageSelected, async (image) => {\n      const response = await fetch(image);\n      const blob = await response.blob();\n      const ref = firebase.storage().ref(refFolder).child(uuid());\n      await ref.put(blob).then(async (result) => {\n        await firebase\n          .storage()\n          .ref(`${refFolder}/${result.metadata.name}`)\n          .getDownloadURL()\n          .then((photoUrl) => {\n            imageBlob.push(photoUrl);\n          });\n      });\n    })\n  );\n\n  return imageBlob;\n};\n"]},"metadata":{},"sourceType":"module"}