{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/news/CreateNewsForm.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Icon, Avatar, Image, Input, Button } from \"react-native-elements\";\nimport { size } from \"lodash\";\nimport firebase from \"firebase/app\";\nimport { uploadImageStorage } from \"../../utils/UploadImageStorage\";\nimport { saveCollection } from \"../../utils/SaveRecord\";\nimport { styleForm } from \"../../src/css/AddForm\";\nimport { styleUploadImage } from \"../../src/css/UploadImage\";\nimport { styleImageMain } from \"../../src/css/ImageMain\";\nimport AddForm from \"../formMain/AddForm\";\nimport UploadImage from \"../formMain/UploadImage\";\nimport ImageMain from \"../formMain/ImageMain\";\nimport Map from \"../formMain/Map\";\nvar widhtScreen = Dimensions.get(\"window\").width;\n\nfunction CreateNewsForm(props) {\n  var toastRef = props.toastRef,\n      setIsLoading = props.setIsLoading,\n      navigation = props.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setloading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      address = _useState6[0],\n      setAddress = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      description = _useState8[0],\n      setDescription = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      imageSelected = _useState10[0],\n      setImageSelected = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isVisibleMap = _useState12[0],\n      setIsVisibleMap = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      locationNew = _useState14[0],\n      setLocationNew = _useState14[1];\n\n  var addNews = function addNews() {\n    setIsLoading(true);\n\n    if (!title || !address || !description) {\n      toastRef.current.show(\"Todos los campos del formulario son obligatorios\");\n    } else if (size(imageSelected) === 0) {\n      toastRef.current.show(\"El evento debe de tener por lo menos una imagen\");\n    } else if (!locationNew) {\n      toastRef.current.show(\"Debes localizar tu noticia o evento en el mapa\");\n    } else {\n      uploadImageStorage(imageSelected, \"news\").then(function (response) {\n        saveCollection({\n          name: title,\n          address: address,\n          description: description,\n          location: locationNew,\n          image: response,\n          createAt: new Date(),\n          createBy: firebase.auth().currentUser.uid\n        }, \"news\", navigation, \"HomeStack\", toastRef, setloading, \"Error al subir la noticia\");\n      });\n    }\n  };\n\n  return React.createElement(ScrollView, {\n    style: styleForm.scrollView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(ImageMain, {\n    styleImageMain: styleImageMain,\n    toastRef: toastRef,\n    widhtScreen: widhtScreen,\n    imageMain: imageSelected[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), React.createElement(AddForm, {\n    title: \"Titulo Noticia o Evento\",\n    address: \"Direcci\\xF3n\",\n    addressVisible: true,\n    description: \"Describa en breves palabras la noticia que esta por publicar...\",\n    styleForm: styleForm,\n    setTitle: setTitle,\n    setAddress: setAddress,\n    setDescription: setDescription,\n    setIsVisibleMap: setIsVisibleMap,\n    locationForm: locationNew,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), React.createElement(UploadImage, {\n    styleUploadImage: styleUploadImage,\n    toastRef: toastRef,\n    imageSelected: imageSelected,\n    setImageSelected: setImageSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    buttonStyle: styleForm.btnCreate,\n    title: \"Crear Noticia\",\n    onPress: addNews,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), React.createElement(Map, {\n    isVisibleMap: isVisibleMap,\n    setIsVisibleMap: setIsVisibleMap,\n    toastRef: toastRef,\n    setLocationForms: setLocationNew,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default CreateNewsForm;","map":{"version":3,"sources":["/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/news/CreateNewsForm.js"],"names":["React","useState","Icon","Avatar","Image","Input","Button","size","firebase","uploadImageStorage","saveCollection","styleForm","styleUploadImage","styleImageMain","AddForm","UploadImage","ImageMain","Map","widhtScreen","Dimensions","get","width","CreateNewsForm","props","toastRef","setIsLoading","navigation","loading","setloading","title","setTitle","address","setAddress","description","setDescription","imageSelected","setImageSelected","isVisibleMap","setIsVisibleMap","locationNew","setLocationNew","addNews","current","show","then","response","name","location","image","createAt","Date","createBy","auth","currentUser","uid","scrollView","btnCreate"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, ScrollView, Alert, Dimensions } from \"react-native\";\nimport { Icon, Avatar, Image, Input, Button } from \"react-native-elements\";\nimport { size } from \"lodash\";\nimport firebase from \"firebase/app\";\nimport { uploadImageStorage } from \"../../utils/UploadImageStorage\";\nimport { saveCollection } from \"../../utils/SaveRecord\";\nimport { styleForm } from \"../../src/css/AddForm\";\nimport { styleUploadImage } from \"../../src/css/UploadImage\";\nimport { styleImageMain } from \"../../src/css/ImageMain\";\nimport AddForm from \"../formMain/AddForm\";\nimport UploadImage from \"../formMain/UploadImage\";\nimport ImageMain from \"../formMain/ImageMain\";\nimport Map from \"../formMain/Map\";\n//devuelve el ancho de la screen\nconst widhtScreen = Dimensions.get(\"window\").width;\nfunction CreateNewsForm(props) {\n  const { toastRef, setIsLoading, navigation } = props;\n  const [loading, setloading] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [imageSelected, setImageSelected] = useState([]);\n  const [isVisibleMap, setIsVisibleMap] = useState(false);\n  const [locationNew, setLocationNew] = useState(null);\n\n  const addNews = () => {\n    setIsLoading(true);\n    if (!title || !address || !description) {\n      toastRef.current.show(\"Todos los campos del formulario son obligatorios\");\n    } else if (size(imageSelected) === 0) {\n      toastRef.current.show(\"El evento debe de tener por lo menos una imagen\");\n    } else if (!locationNew) {\n      toastRef.current.show(\"Debes localizar tu noticia o evento en el mapa\");\n    } else {\n      uploadImageStorage(imageSelected, \"news\").then((response) => {\n        saveCollection(\n          {\n            name: title,\n            address: address,\n            description: description,\n            location: locationNew,\n            image: response,\n            createAt: new Date(),\n            createBy: firebase.auth().currentUser.uid,\n          },\n          \"news\",\n          navigation,\n          \"HomeStack\",\n          toastRef,\n          setloading,\n          \"Error al subir la noticia\"\n        );\n      });\n    }\n  };\n\n  //const {title, setTitle, address, setAddress, description, setDescription, btnName, addressVisible} = props\n\n  return (\n    <ScrollView style={styleForm.scrollView}>\n      <View>\n        <ImageMain\n          styleImageMain={styleImageMain}\n          toastRef={toastRef}\n          widhtScreen={widhtScreen}\n          imageMain={imageSelected[0]}\n        />\n        <AddForm\n          title=\"Titulo Noticia o Evento\"\n          address=\"Dirección\"\n          addressVisible={true}\n          description=\"Describa en breves palabras la noticia que esta por publicar...\"\n          styleForm={styleForm}\n          setTitle={setTitle}\n          setAddress={setAddress}\n          setDescription={setDescription}\n          setIsVisibleMap={setIsVisibleMap}\n          locationForm={locationNew}\n        />\n\n        <UploadImage\n          styleUploadImage={styleUploadImage}\n          toastRef={toastRef}\n          imageSelected={imageSelected}\n          setImageSelected={setImageSelected}\n        />\n        <Button\n          buttonStyle={styleForm.btnCreate}\n          title=\"Crear Noticia\"\n          onPress={addNews}\n        />\n        <Map\n          isVisibleMap={isVisibleMap}\n          setIsVisibleMap={setIsVisibleMap}\n          toastRef={toastRef}\n          setLocationForms={setLocationNew}\n        />\n      </View>\n    </ScrollView>\n  );\n}\n\nexport default CreateNewsForm;\n"]},"metadata":{},"sourceType":"module"}