{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/account/AccountOptions.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ListItem } from 'react-native-elements';\nimport { map } from 'lodash';\nimport Modal from \"../Modal\";\nimport ChangeDisplayNameForm from \"./ChangeDisplayNameForm\";\nimport ChangeEmailForm from \"./ChangeEmailForm\";\nimport ChangePasswordForm from \"./ChangePasswordForm\";\n\nfunction generateOptions(selectedComponent) {\n  return [{\n    title: 'Tipo Usuario',\n    iconType: 'material-community',\n    iconNameLeft: 'account-box-multiple',\n    iconNameRight: 'chevron-right',\n    iconColorLeft: '#1A89E7',\n    iconColorRight: '#CCC',\n    onPress: function onPress() {\n      return selectedComponent('password');\n    }\n  }, {\n    title: 'Nombre y Apellidos',\n    iconType: 'material-community',\n    iconNameLeft: 'account-circle',\n    iconNameRight: 'chevron-right',\n    iconColorLeft: '#1A89E7',\n    iconColorRight: '#CCC',\n    onPress: function onPress() {\n      return selectedComponent('displayName');\n    }\n  }, {\n    title: 'Email',\n    iconType: 'material-community',\n    iconNameLeft: 'at',\n    iconNameRight: 'chevron-right',\n    iconColorLeft: '#1A89E7',\n    iconColorRight: '#CCC',\n    onPress: function onPress() {\n      return selectedComponent('email');\n    }\n  }, {\n    title: 'Dirección',\n    iconType: 'material-community',\n    iconNameLeft: 'map-marker',\n    iconNameRight: 'chevron-right',\n    iconColorLeft: '#1A89E7',\n    iconColorRight: '#CCC',\n    onPress: function onPress() {\n      return selectedComponent('password');\n    }\n  }, {\n    title: 'Contraseña',\n    iconType: 'material-community',\n    iconNameLeft: 'lock-reset',\n    iconNameRight: 'chevron-right',\n    iconColorLeft: '#1A89E7',\n    iconColorRight: '#CCC',\n    onPress: function onPress() {\n      return selectedComponent('password');\n    }\n  }];\n}\n\nfunction AccountOptions(props) {\n  var userInfo = props.userInfo,\n      toastRef = props.toastRef,\n      setReloadUserInfo = props.setReloadUserInfo;\n  var _props$userInfo = props.userInfo,\n      displayName = _props$userInfo.displayName,\n      email = _props$userInfo.email,\n      providerId = _props$userInfo.providerId,\n      uid = _props$userInfo.uid;\n  console.log('estamos en el account options');\n  console.log(props.userInfo);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      renderComponent = _useState4[0],\n      setRenderComponent = _useState4[1];\n\n  var selectedComponent = function selectedComponent(key) {\n    console.log(key);\n    setShowModal(true);\n\n    switch (key) {\n      case 'displayName':\n        setRenderComponent(React.createElement(ChangeDisplayNameForm, {\n          displayName: displayName,\n          setShowModal: setShowModal,\n          setReloadUserInfo: setReloadUserInfo,\n          toastRef: toastRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 6\n          }\n        }));\n        break;\n\n      case 'email':\n        setRenderComponent(React.createElement(ChangeEmailForm, {\n          email: email,\n          setShowModal: setShowModal,\n          setReloadUserInfo: setReloadUserInfo,\n          toastRef: toastRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 6\n          }\n        }));\n        break;\n\n      case 'password':\n        setRenderComponent(React.createElement(ChangePasswordForm, {\n          setShowModal: setShowModal,\n          setReloadUserInfo: setReloadUserInfo,\n          toastRef: toastRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 6\n          }\n        }));\n        break;\n\n      default:\n        setRenderComponent(null);\n        break;\n    }\n  };\n\n  var menuOptions = '';\n\n  if (props.userInfo.providerData) {\n    if (props.userInfo.providerData[0].providerId === 'facebook.com') {\n      console.log(props.userInfo.providerData[0].providerId);\n      menuOptions = [generateOptions(selectedComponent)[1]];\n    } else {\n      menuOptions = generateOptions(selectedComponent);\n    }\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 3\n    }\n  }, map(menuOptions, function (menu, index) {\n    return React.createElement(ListItem, {\n      key: index,\n      title: menu.title,\n      leftIcon: {\n        type: menu.iconType,\n        name: menu.iconNameLeft,\n        color: menu.iconColorLeft\n      },\n      rightIcon: {\n        type: menu.iconType,\n        name: menu.iconNameRight,\n        color: menu.iconColorRight\n      },\n      containerStyle: styles.menuItem,\n      onPress: menu.onPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }\n    });\n  }), renderComponent && React.createElement(Modal, {\n    isVisible: showModal,\n    setIsVisible: setShowModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, renderComponent));\n}\n\nexport default AccountOptions;\nvar styles = StyleSheet.create({\n  menuItem: {\n    borderBottomWidth: 1,\n    borderBottomColor: '#E3E3E3'\n  }\n});","map":{"version":3,"sources":["/Users/brayhanjaramillo/DocumentosBrayhan/React Native/repositorio/petGeo5/app/components/account/AccountOptions.js"],"names":["React","useState","ListItem","map","Modal","ChangeDisplayNameForm","ChangeEmailForm","ChangePasswordForm","generateOptions","selectedComponent","title","iconType","iconNameLeft","iconNameRight","iconColorLeft","iconColorRight","onPress","AccountOptions","props","userInfo","toastRef","setReloadUserInfo","displayName","email","providerId","uid","console","log","showModal","setShowModal","renderComponent","setRenderComponent","key","menuOptions","providerData","menu","index","type","name","color","styles","menuItem","StyleSheet","create","borderBottomWidth","borderBottomColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, Text } from 'react-native';\nimport { ListItem } from 'react-native-elements';\nimport { map } from 'lodash';\n\nimport Modal from '../Modal';\nimport ChangeDisplayNameForm from './ChangeDisplayNameForm';\nimport ChangeEmailForm from './ChangeEmailForm';\nimport ChangePasswordForm from './ChangePasswordForm';\n\n/**\n * Funcion que permite crear una lista de las opciones disponibles \n * en la edición de la informacioón del usuario (tambien para visualizarla)\n */\nfunction generateOptions(selectedComponent) {\n\treturn [\n\t\t{\n\t\t\ttitle: 'Tipo Usuario',\n\t\t\ticonType: 'material-community',\n\t\t\ticonNameLeft: 'account-box-multiple',\n\t\t\ticonNameRight: 'chevron-right',\n\t\t\ticonColorLeft: '#1A89E7',\n\t\t\ticonColorRight: '#CCC',\n\t\t\tonPress: () => selectedComponent('password')\n\t\t},\n\t\t{\n\t\t\ttitle: 'Nombre y Apellidos',\n\t\t\ticonType: 'material-community',\n\t\t\ticonNameLeft: 'account-circle',\n\t\t\ticonNameRight: 'chevron-right',\n\t\t\ticonColorLeft: '#1A89E7',\n\t\t\ticonColorRight: '#CCC',\n\t\t\tonPress: () => selectedComponent('displayName')\n\t\t},\n\t\t{\n\t\t\ttitle: 'Email',\n\t\t\ticonType: 'material-community',\n\t\t\ticonNameLeft: 'at',\n\t\t\ticonNameRight: 'chevron-right',\n\t\t\ticonColorLeft: '#1A89E7',\n\t\t\ticonColorRight: '#CCC',\n\t\t\tonPress: () => selectedComponent('email')\n\t\t},\n\n\t\t{\n\t\t\ttitle: 'Dirección',\n\t\t\ticonType: 'material-community',\n\t\t\ticonNameLeft: 'map-marker',\n\t\t\ticonNameRight: 'chevron-right',\n\t\t\ticonColorLeft: '#1A89E7',\n\t\t\ticonColorRight: '#CCC',\n\t\t\tonPress: () => selectedComponent('password')\n\t\t},\n\n\t\t{\n\t\t\ttitle: 'Contraseña',\n\t\t\ticonType: 'material-community',\n\t\t\ticonNameLeft: 'lock-reset',\n\t\t\ticonNameRight: 'chevron-right',\n\t\t\ticonColorLeft: '#1A89E7',\n\t\t\ticonColorRight: '#CCC',\n\t\t\tonPress: () => selectedComponent('password')\n\t\t}\n\t];\n}\n\nfunction AccountOptions(props) {\n\tconst { userInfo, toastRef, setReloadUserInfo } = props;\n\tconst { userInfo: { displayName, email, providerId, uid } } = props;\n\tconsole.log('estamos en el account options');\n\tconsole.log(props.userInfo);\n\n\t// variables que nos permitiran la modificacion con un verdadero o un falso\n\t// mostrar un modal para cambiar el nombre, email o contraseña\n\tconst [ showModal, setShowModal ] = useState(false);\n\n\t//Varaibles que nos permitiran pasar la informacion necesaria para el modal\n\tconst [ renderComponent, setRenderComponent ] = useState(null);\n\n\t/***\n * Funcion que permite seleccionar el componente para cambiar\n * la el nombre, el email o la contraseña\n */\n\tconst selectedComponent = (key) => {\n\t\tconsole.log(key);\n\t\tsetShowModal(true);\n\t\tswitch (key) {\n\t\t\tcase 'displayName':\n\t\t\t\tsetRenderComponent(\n\t\t\t\t\t<ChangeDisplayNameForm\n\t\t\t\t\t\tdisplayName={displayName}\n\t\t\t\t\t\tsetShowModal={setShowModal}\n\t\t\t\t\t\tsetReloadUserInfo={setReloadUserInfo}\n\t\t\t\t\t\ttoastRef={toastRef}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'email':\n\t\t\t\tsetRenderComponent(\n\t\t\t\t\t<ChangeEmailForm\n\t\t\t\t\t\temail={email}\n\t\t\t\t\t\tsetShowModal={setShowModal}\n\t\t\t\t\t\tsetReloadUserInfo={setReloadUserInfo}\n\t\t\t\t\t\ttoastRef={toastRef}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'password':\n\t\t\t\tsetRenderComponent(\n\t\t\t\t\t<ChangePasswordForm\n\t\t\t\t\t\tsetShowModal={setShowModal}\n\t\t\t\t\t\tsetReloadUserInfo={setReloadUserInfo}\n\t\t\t\t\t\ttoastRef={toastRef}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsetRenderComponent(null);\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tvar menuOptions = '';\n\n\tif (props.userInfo.providerData) {\n\t\tif (props.userInfo.providerData[0].providerId === 'facebook.com') {\n\t\t\tconsole.log(props.userInfo.providerData[0].providerId);\n\t\t\tmenuOptions = [ generateOptions(selectedComponent)[1] ];\n\t\t} else {\n\t\t\tmenuOptions = generateOptions(selectedComponent);\n\t\t}\n\t}\n\n\treturn (\n\t\t<View>\n\t\t\t{map(menuOptions, (menu, index) => (\n\t\t\t\t<ListItem\n\t\t\t\t\tkey={index}\n\t\t\t\t\ttitle={menu.title}\n\t\t\t\t\tleftIcon={{\n\t\t\t\t\t\ttype: menu.iconType,\n\t\t\t\t\t\tname: menu.iconNameLeft,\n\t\t\t\t\t\tcolor: menu.iconColorLeft\n\t\t\t\t\t}}\n\t\t\t\t\trightIcon={{\n\t\t\t\t\t\ttype: menu.iconType,\n\t\t\t\t\t\tname: menu.iconNameRight,\n\t\t\t\t\t\tcolor: menu.iconColorRight\n\t\t\t\t\t}}\n\t\t\t\t\tcontainerStyle={styles.menuItem}\n\t\t\t\t\tonPress={menu.onPress}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t{renderComponent && (\n\t\t\t\t<Modal isVisible={showModal} setIsVisible={setShowModal}>\n\t\t\t\t\t{renderComponent}\n\t\t\t\t</Modal>\n\t\t\t)}\n\t\t</View>\n\t);\n}\nexport default AccountOptions;\n\nconst styles = StyleSheet.create({\n\tmenuItem: {\n\t\tborderBottomWidth: 1,\n\t\tborderBottomColor: '#E3E3E3'\n\t}\n});\n"]},"metadata":{},"sourceType":"module"}